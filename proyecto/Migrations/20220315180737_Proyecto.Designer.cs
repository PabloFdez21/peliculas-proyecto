// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyecto.Datos;

namespace proyecto.Migrations
{
    [DbContext(typeof(ContextoDb))]
    [Migration("20220315180737_Proyecto")]
    partial class Proyecto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("proyecto.Models.Actor_Pelicula", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.HasKey("ActorId", "PeliculaId");

                    b.HasIndex("PeliculaId");

                    b.ToTable("Actores_Peliculas");
                });

            modelBuilder.Entity("proyecto.Models.Actores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Biografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actores");
                });

            modelBuilder.Entity("proyecto.Models.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Biografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directores");
                });

            modelBuilder.Entity("proyecto.Models.DondeVer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dondevers");
                });

            modelBuilder.Entity("proyecto.Models.Pelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Caratula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoriaPelicula")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionPelicula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<int>("DondeVerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Estreno")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombrePelicula")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("DondeVerId");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("proyecto.Models.Actor_Pelicula", b =>
                {
                    b.HasOne("proyecto.Models.Actores", "Actor")
                        .WithMany("Actor_Peliculas")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto.Models.Pelicula", "Pelicula")
                        .WithMany("Actor_Pelciulas")
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("proyecto.Models.Pelicula", b =>
                {
                    b.HasOne("proyecto.Models.Director", "Director")
                        .WithMany("Peliculas")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto.Models.DondeVer", "DondeVer")
                        .WithMany("Peliculas")
                        .HasForeignKey("DondeVerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("DondeVer");
                });

            modelBuilder.Entity("proyecto.Models.Actores", b =>
                {
                    b.Navigation("Actor_Peliculas");
                });

            modelBuilder.Entity("proyecto.Models.Director", b =>
                {
                    b.Navigation("Peliculas");
                });

            modelBuilder.Entity("proyecto.Models.DondeVer", b =>
                {
                    b.Navigation("Peliculas");
                });

            modelBuilder.Entity("proyecto.Models.Pelicula", b =>
                {
                    b.Navigation("Actor_Pelciulas");
                });
#pragma warning restore 612, 618
        }
    }
}
